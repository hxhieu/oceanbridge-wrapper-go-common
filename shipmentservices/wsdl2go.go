// Code generated by wsdl2go. DO NOT EDIT.

package shipmentservices

import (
	"reflect"

	"github.com/fiorix/wsdl2go/soap"
)

// Namespace was auto-generated from WSDL.
var Namespace = "http://www.edi.com.au/EnterpriseService/"

// NewShipmentServiceSoap creates an initializes a ShipmentServiceSoap.
func NewShipmentServiceSoap(cli *soap.Client) ShipmentServiceSoap {
	return &shipmentServiceSoap{cli}
}

// ShipmentServiceSoap was auto-generated from WSDL
// and defines interface for the remote service. Useful for testing.
type ShipmentServiceSoap interface {
	// Returns list of all Shipments/Declarations for a client. This
	// method requires a custom soap header set by the caller
	GetShipmentsList(GetShipmentsList *GetShipmentsList) (*GetShipmentsListResponse, error)

	// Test method to check whether login credentials work
	Hello(Hello *Hello) (*HelloResponse, error)
}

// Date in WSDL format.
type Date string

// DateTime in WSDL format.
type DateTime string

// AddressCapabilityAddressType was auto-generated from WSDL.
type AddressCapabilityAddressType string

// Validate validates AddressCapabilityAddressType.
func (v AddressCapabilityAddressType) Validate() bool {
	for _, vv := range []string{
		"MAIN",
		"OFC",
		"PST",
		"ARM",
		"APM",
		"PIC",
		"DLV",
		"PAD",
		"SQM",
		"MSC",
		"RSD",
		"CST",
		"AWB",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// BondDetailActivityCode was auto-generated from WSDL.
type BondDetailActivityCode string

// Validate validates BondDetailActivityCode.
func (v BondDetailActivityCode) Validate() bool {
	for _, vv := range []string{
		"1",
		"1a",
		"1a1",
		"2",
		"3",
		"3a",
		"3a3",
		"4",
		"5",
		"6",
		"7",
		"8",
		"9",
		"10",
		"11",
		"12",
		"13",
		"14",
		"15",
		"16",
		"17",
		"18",
		"19",
		"20",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// DocAddressAddressType was auto-generated from WSDL.
type DocAddressAddressType string

// Validate validates DocAddressAddressType.
func (v DocAddressAddressType) Validate() bool {
	for _, vv := range []string{
		"CED",
		"CRG",
		"CEG",
		"CRD",
		"CRB",
		"SUD",
		"IMD",
		"SUG",
		"IMG",
		"CLP",
		"CLD",
		"CLW",
		"NPP",
		"N2D",
		"N3D",
		"LCT",
		"LCF",
		"LCY",
		"LCI",
		"LCE",
		"LC1",
		"LC2",
		"LC3",
		"LC4",
		"LCS",
		"LCM",
		"DUM",
		"NONE",
		"LCP",
		"LCD",
		"BKD",
		"CEA",
		"GBA",
		"PUA",
		"FWD",
		"ICD",
		"FSD",
		"OQP",
		"OQD",
		"ACF",
		"ACT",
		"ACY",
		"DCF",
		"DCT",
		"DCY",
		"DOA",
		"BUY",
		"INS",
		"ASS",
		"CPB",
		"SRO",
		"TRA",
		"TBT",
		"CCP",
		"CTO",
		"CDE",
		"CWA",
		"PRO",
		"SOF",
		"GOV",
		"LCA",
		"CPL",
		"SCP",
		"CON",
		"MAN",
		"SEP",
		"BYP",
		"STP",
		"CSL",
		"CTP",
		"LCW",
		"EXB",
		"ALT",
		"CAR",
		"CPP",
		"CPR",
		"CTR",
		"CDT",
		"DLT",
		"LCN",
		"OSA",
		"LOC",
		"RFA",
		"SFA",
		"SLA",
		"ICA",
		"DVA",
		"EXR",
		"IMB",
		"DED",
		"DLM",
		"DLD",
		"PRC",
		"APE",
		"PAG",
		"WHS",
		"POC",
		"CIO",
		"ORN",
		"OCA",
		"FCA",
		"DCA",
		"ADA",
		"ADC",
		"OIL",
		"CFP",
		"CAG",
		"VGM",
		"IMR",
		"EXP",
		"MBI",
		"CLA",
		"COL",
		"HBI",
		"AGT",
		"DES",
		"DIS",
		"OWN",
		"TRP",
		"CTN",
		"DET",
		"WHC",
		"REP",
		"CBA",
		"CHA",
		"ACQ",
		"DLR",
		"OCT",
		"BOF",
		"ARP",
		"ATD",
		"AEC",
		"CBP",
		"GLC",
		"CPK",
		"GAA",
		"GDT",
		"RFP",
		"ICT",
		"FDA",
		"UCE",
		"ICE",
		"PPI",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// NotesNoteNoteType was auto-generated from WSDL.
type NotesNoteNoteType string

// Validate validates NotesNoteNoteType.
func (v NotesNoteNoteType) Validate() bool {
	for _, vv := range []string{
		"Custom",
		"AccountsPayableAccountManagementNotes",
		"AccountsReceivableAccountManagementNotes",
		"AccountsReceivableCreditManagementNote",
		"AutoRatingAuditLog",
		"AWBRatelineOvertypedNotes",
		"BookingNotes",
		"CarrierBookingRequest",
		"CertificateOfOriginNote",
		"ClientVisibleJobNotes",
		"ContainerReleaseNote",
		"CustomsMessageRemarks",
		"CustomsDeliveryInstructions",
		"DangerousGoodsAdditionalHandlingInformation",
		"DeliveryInstructionsNote",
		"DeliveryOrderReceiptNotes",
		"DetailedGoodsDescription",
		"ExportCustomsHandlineNotes",
		"ExportReceivalAdviceRemarks",
		"ExtendedCommercialDescription",
		"ExtraOrderDetails",
		"FaxEmailTransmissionLog",
		"ForwardingInstructionNotes",
		"FullJobRoleDescription",
		"GatePassNotes",
		"HandlingInstructions",
		"ImportCustomsHandlingNotes",
		"InactiveRecordDetails",
		"InternalWorkNotes",
		"InvoiceDetails",
		"InvoicingPreferences",
		"ReceiveConfirmationInstructions",
		"IssueWorkingNotes",
		"IssueResolutionNotes",
		"LoadListInstructions",
		"ManifestGoodsDescription",
		"MarksAndNumbers",
		"MessageInterpretation",
		"OrderManagementNote",
		"OrderManagementUpdate",
		"OrderUpdateHistory",
		"OutturnNotes",
		"PaymentHandlingInstructions",
		"PickingInstructions",
		"PickupInstructionsNote",
		"PrealertArrivalNoticeRemarks",
		"QuoteCoverPageText",
		"SpecialInstructions",
		"SurveyInstructions",
		"TranshipmentNotes",
		"TraxonLicenseNumbers",
		"UnmatchedOrgDetails",
		"WebUserNote",
		"TradeLaneChargeInformation",
		"CustomsInstructionNotes",
		"AdditionalSecurityInformation",
		"AdditionalBillClauses",
		"CountryRules",
		"HouseBillChargesOverride",
		"HouseBillFollowOnOverride",
		"HouseBillGoodsDetailsOverride",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// OrgAddressAddressType was auto-generated from WSDL.
type OrgAddressAddressType string

// Validate validates OrgAddressAddressType.
func (v OrgAddressAddressType) Validate() bool {
	for _, vv := range []string{
		"MAIN",
		"OFC",
		"PST",
		"ARM",
		"APM",
		"PIC",
		"DLV",
		"PAD",
		"SQM",
		"MSC",
		"AWB",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// OrgWebURLType was auto-generated from WSDL.
type OrgWebURLType string

// Validate validates OrgWebURLType.
func (v OrgWebURLType) Validate() bool {
	for _, vv := range []string{
		"MAI",
		"CRT",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// OrganisationDetailEDITransmissionDetailsType was auto-generated
// from WSDL.
type OrganisationDetailEDITransmissionDetailsType string

// Validate validates OrganisationDetailEDITransmissionDetailsType.
func (v OrganisationDetailEDITransmissionDetailsType) Validate() bool {
	for _, vv := range []string{
		"EMA",
		"EMT",
		"FIL",
		"FTP",
		"HUB",
		"EDP",
		"UDB",
		"NXC",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// OrganisationTypes was auto-generated from WSDL.
type OrganisationTypes string

// Validate validates OrganisationTypes.
func (v OrganisationTypes) Validate() bool {
	for _, vv := range []string{
		"ACT",
		"NAT",
		"GLB",
		"TMP",
		"A_R",
		"A_P",
		"CNR",
		"CNE",
		"EOR",
		"TRN",
		"WHS",
		"CAR",
		"FWD",
		"BRK",
		"SVS",
		"COM",
		"SAL",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// RegistrationNumberTypes was auto-generated from WSDL.
type RegistrationNumberTypes string

// Validate validates RegistrationNumberTypes.
func (v RegistrationNumberTypes) Validate() bool {
	for _, vv := range []string{
		"LCO",
		"AEX",
		"1ST",
		"ABN",
		"ABR",
		"ACE",
		"ACL",
		"AEC",
		"AEO",
		"AFM",
		"AGT",
		"AID",
		"ALC",
		"ALT",
		"APC",
		"APE",
		"APH",
		"ARN",
		"ASC",
		"ATF",
		"BHR",
		"BHT",
		"BID",
		"BIL",
		"BIR",
		"BPN",
		"BRC",
		"BRM",
		"BRL",
		"BRN",
		"BRP",
		"BRT",
		"BST",
		"BTW",
		"BYR",
		"CAC",
		"CAI",
		"CAR",
		"CAT",
		"CAX",
		"CSA",
		"CBN",
		"CBR",
		"CBO",
		"CBP",
		"CBS",
		"CCC",
		"CCD",
		"CCG",
		"CCN",
		"CCP",
		"CCR",
		"CCS",
		"CCT",
		"CEN",
		"CID",
		"CIJ",
		"CIQ",
		"DIM",
		"NIT",
		"CHB",
		"CFS",
		"CJN",
		"CMM",
		"CMP",
		"CMT",
		"CNO",
		"CNP",
		"CIF",
		"COC",
		"COD",
		"COM",
		"CON",
		"CDP",
		"CPC",
		"CPD",
		"CPF",
		"CPT",
		"CPW",
		"CRB",
		"CRN",
		"CSC",
		"SIN",
		"CST",
		"CTP",
		"CUI",
		"CUU",
		"CVR",
		"CWC",
		"DAN",
		"DBC",
		"DDV",
		"DIP",
		"DIR",
		"DLV",
		"DN4",
		"DNI",
		"DOT",
		"DOY",
		"DRV",
		"DPH",
		"DUN",
		"EAG",
		"EAN",
		"EAP",
		"ECN",
		"EBS",
		"ECR",
		"EDR",
		"EEN",
		"NEN",
		"EEU",
		"EID",
		"EIN",
		"ENE",
		"ENF",
		"ENP",
		"EOR",
		"EPL",
		"ESN",
		"ETI",
		"FAA",
		"FEI",
		"FMC",
		"FNL",
		"FRM",
		"FRN",
		"FST",
		"GBR",
		"GCA",
		"GCC",
		"GCR",
		"GCT",
		"GEM",
		"GID",
		"GMC",
		"GS1",
		"GST",
		"GTN",
		"GTX",
		"HID",
		"HRB",
		"IAG",
		"IBG",
		"ICE",
		"IDB",
		"JMB",
		"PDV",
		"IDN",
		"IDO",
		"IEC",
		"IEF",
		"IFU",
		"IGC",
		"IGV",
		"IMF",
		"IMK",
		"INT",
		"IPR",
		"IRS",
		"IST",
		"IVA",
		"IVE",
		"IVF",
		"IVI",
		"IVM",
		"IVN",
		"IVR",
		"IVU",
		"JNP",
		"KBC",
		"KBT",
		"KCN",
		"KEN",
		"KPP",
		"LSC",
		"MID",
		"MED",
		"NFK",
		"NIN",
		"NCC",
		"NIU",
		"NUI",
		"MQE",
		"MVA",
		"NAF",
		"NAO",
		"NBO",
		"NEI",
		"NGA",
		"NGB",
		"NGC",
		"NIC",
		"NIF",
		"NIP",
		"NIS",
		"NMF",
		"NRC",
		"NRS",
		"OGR",
		"OIB",
		"OPR",
		"ORG",
		"OTH",
		"PAN",
		"PAS",
		"PFR",
		"PIM",
		"PIN",
		"PNR",
		"PPN",
		"PP2",
		"PP3",
		"PST",
		"PTU",
		"PVM",
		"PVN",
		"QST",
		"RAC",
		"RAI",
		"RAN",
		"RCM",
		"RCR",
		"REB",
		"REM",
		"RDT",
		"RFC",
		"RGN",
		"RID",
		"RIF",
		"RNC",
		"ROB",
		"ROC",
		"RCC",
		"RTN",
		"RUC",
		"RUT",
		"SAN",
		"SEP",
		"SER",
		"SFC",
		"SFR",
		"SHD",
		"SID",
		"SOL",
		"SRF",
		"SRI",
		"SRN",
		"SRT",
		"SSN",
		"SVT",
		"TAH",
		"TAN",
		"TAX",
		"TBN",
		"TEN",
		"TGC",
		"TID",
		"TIN",
		"TMC",
		"TPC",
		"TPT",
		"TRN",
		"TVA",
		"TVS",
		"UEN",
		"QCI",
		"UID",
		"UIN",
		"UNC",
		"UOC",
		"USC",
		"UST",
		"VAG",
		"VAS",
		"VAT",
		"VDM",
		"VTE",
		"VRN",
		"VSK",
		"ZAP",
		"DPC",
		"DBI",
		"PIB",
		"PID",
		"PBR",
		"PIG",
		"MCI",
		"CBF",
		"EPZ",
		"FTZ",
		"TIR",
		"CHP",
		"LOS",
		"TCU",
		"TTB",
		"TTI",
		"TTE",
		"DDT",
		"CFI",
		"NSL",
		"WMI",
		"AIN",
		"LAB",
		"DEA",
		"AMS",
		"C1C",
		"VGM",
		"NAI",
		"SIC",
		"IFT",
		"ACN",
		"ACR",
		"ATS",
		"API",
		"EPI",
		"CED",
		"TNP",
		"IPA",
		"EUA",
		"SAL",
		"WCA",
		"PEC",
		"CAG",
		"DOD",
		"QEN",
		"ACA",
		"WPI",
		"BGV",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ShipmentDateFieldsList was auto-generated from WSDL.
type ShipmentDateFieldsList string

// Validate validates ShipmentDateFieldsList.
func (v ShipmentDateFieldsList) Validate() bool {
	for _, vv := range []string{
		"ALL",
		"ETA",
		"ETD",
		"Tranship",
		"Forward",
		"FirstArrivalPort",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ShipmentLocationFieldsList was auto-generated from WSDL.
type ShipmentLocationFieldsList string

// Validate validates ShipmentLocationFieldsList.
func (v ShipmentLocationFieldsList) Validate() bool {
	for _, vv := range []string{
		"ALL",
		"ShipmentOriginDestination",
		"ConsolLoadDischarge",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ShipmentNumberFieldsList was auto-generated from WSDL.
type ShipmentNumberFieldsList string

// Validate validates ShipmentNumberFieldsList.
func (v ShipmentNumberFieldsList) Validate() bool {
	for _, vv := range []string{
		"ALL",
		"Common",
		"ShipmentNumber",
		"HouseBill",
		"ConsolNumber",
		"MasterBillNumber",
		"ClientReference",
		"OrderNumber",
		"InterimReceiptNumber",
		"PackRefNumber",
		"ContainerNo",
		"DirectMAWB",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ShipmentOrganisationFieldsList was auto-generated from WSDL.
type ShipmentOrganisationFieldsList string

// Validate validates ShipmentOrganisationFieldsList.
func (v ShipmentOrganisationFieldsList) Validate() bool {
	for _, vv := range []string{
		"ALL",
		"ShipperConsignee",
		"SendingReceivingAgent",
		"ExportBrokerCartage",
		"ImportBrokerCartage",
		"DeliveryAgent",
		"TranshipAgent",
		"ConsolSendingRecvAgent",
		"ShipmentSendingRecvAgent",
		"ConsignorRelatedParties",
		"ConsigneeRelatedParties",
		"LocalClientRelatedParties",
		"PickupAgent",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// ShipmentStatusList was auto-generated from WSDL.
type ShipmentStatusList string

// Validate validates ShipmentStatusList.
func (v ShipmentStatusList) Validate() bool {
	for _, vv := range []string{
		"ALL",
		"Delivered",
		"Undelivered",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// TelephoneNumberNumberType was auto-generated from WSDL.
type TelephoneNumberNumberType string

// Validate validates TelephoneNumberNumberType.
func (v TelephoneNumberNumberType) Validate() bool {
	for _, vv := range []string{
		"Business",
		"Fax",
		"Mobile",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// TransportMode was auto-generated from WSDL.
type TransportMode string

// Validate validates TransportMode.
func (v TransportMode) Validate() bool {
	for _, vv := range []string{
		"SEA",
		"AIR",
		"ROA",
		"RAI",
		"MAI",
		"FSA",
		"FAS",
		"COU",
		"CHA",
		"CHS",
		"OTH",
		"UNK",
		"STO",
		"BWB",
		"TRK",
		"AUT",
		"PED",
		"PHC",
		"FIX",
		"HND",
		"OWN",
		"IWT",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// TrueFalse was auto-generated from WSDL.
type TrueFalse string

// Validate validates TrueFalse.
func (v TrueFalse) Validate() bool {
	for _, vv := range []string{
		"false",
		"true",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// USImporterOfRecordDetailsPaymentType was auto-generated from
// WSDL.
type USImporterOfRecordDetailsPaymentType string

// Validate validates USImporterOfRecordDetailsPaymentType.
func (v USImporterOfRecordDetailsPaymentType) Validate() bool {
	for _, vv := range []string{
		"1",
		"2",
		"3",
		"5",
		"6",
		"7",
		"8",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// USImporterOfRecordDetailsTaxDeferredInd was auto-generated from
// WSDL.
type USImporterOfRecordDetailsTaxDeferredInd string

// Validate validates USImporterOfRecordDetailsTaxDeferredInd.
func (v USImporterOfRecordDetailsTaxDeferredInd) Validate() bool {
	for _, vv := range []string{
		"0",
		"1",
		"2",
		"B",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// USManufacturerProducerDataTypeFoodFacilityRegistrationExemption
// was auto-generated from WSDL.
type USManufacturerProducerDataTypeFoodFacilityRegistrationExemption string

// Validate validates USManufacturerProducerDataTypeFoodFacilityRegistrationExemption.
func (v USManufacturerProducerDataTypeFoodFacilityRegistrationExemption) Validate() bool {
	for _, vv := range []string{
		"A",
		"B",
		"C",
		"D",
		"E",
		"F",
		"G",
		"H",
		"I",
		"J",
		"K",
		"L",
		"M",
		"O",
		"Y",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// USManufacturerProducerDataTypeProducerFirmType was auto-generated
// from WSDL.
type USManufacturerProducerDataTypeProducerFirmType string

// Validate validates USManufacturerProducerDataTypeProducerFirmType.
func (v USManufacturerProducerDataTypeProducerFirmType) Validate() bool {
	for _, vv := range []string{
		"M",
		"G",
		"C",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// USOrganisationSpecificDetailsFDASubmitterFirmType was auto-generated
// from WSDL.
type USOrganisationSpecificDetailsFDASubmitterFirmType string

// Validate validates USOrganisationSpecificDetailsFDASubmitterFirmType.
func (v USOrganisationSpecificDetailsFDASubmitterFirmType) Validate() bool {
	for _, vv := range []string{
		"C",
		"F",
		"I",
		"M",
		"S",
		"U",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// USReconciliationIssue was auto-generated from WSDL.
type USReconciliationIssue string

// Validate validates USReconciliationIssue.
func (v USReconciliationIssue) Validate() bool {
	for _, vv := range []string{
		"98",
		"C9",
		"CL",
		"V9",
		"AL",
		"VC",
		"VL",
		"NA",
	} {
		if reflect.DeepEqual(v, vv) {
			return true
		}
	}
	return false
}

// AccountsPayable was auto-generated from WSDL.
type AccountsPayable struct {
	DefaultCurrency            *string            `xml:"DefaultCurrency,omitempty" json:"DefaultCurrency,omitempty" yaml:"DefaultCurrency,omitempty"`
	AccountGroup               *string            `xml:"AccountGroup,omitempty" json:"AccountGroup,omitempty" yaml:"AccountGroup,omitempty"`
	CreditLimit                *float64           `xml:"CreditLimit,omitempty" json:"CreditLimit,omitempty" yaml:"CreditLimit,omitempty"`
	GSTIsApplicable            *bool              `xml:"GSTIsApplicable,omitempty" json:"GSTIsApplicable,omitempty" yaml:"GSTIsApplicable,omitempty"`
	WithholdingTaxIsApplicable *bool              `xml:"WithholdingTaxIsApplicable,omitempty" json:"WithholdingTaxIsApplicable,omitempty" yaml:"WithholdingTaxIsApplicable,omitempty"`
	PaymentTerms               *string            `xml:"PaymentTerms,omitempty" json:"PaymentTerms,omitempty" yaml:"PaymentTerms,omitempty"`
	PaymentDays                *int               `xml:"PaymentDays,omitempty" json:"PaymentDays,omitempty" yaml:"PaymentDays,omitempty"`
	SettlementDetails          *SettlementDetails `xml:"SettlementDetails,omitempty" json:"SettlementDetails,omitempty" yaml:"SettlementDetails,omitempty"`
	ExternalCreditorCode       *string            `xml:"ExternalCreditorCode,omitempty" json:"ExternalCreditorCode,omitempty" yaml:"ExternalCreditorCode,omitempty"`
	CompanyCode                string             `xml:"CompanyCode,attr,omitempty" json:"CompanyCode,attr,omitempty" yaml:"CompanyCode,attr,omitempty"`
	TypeAttrXSI                string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace              string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AccountsPayable) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AccountsPayable"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// AccountsReceivable was auto-generated from WSDL.
type AccountsReceivable struct {
	DefaultCurrency               *string            `xml:"DefaultCurrency,omitempty" json:"DefaultCurrency,omitempty" yaml:"DefaultCurrency,omitempty"`
	AccountGroup                  *string            `xml:"AccountGroup,omitempty" json:"AccountGroup,omitempty" yaml:"AccountGroup,omitempty"`
	CreditLimit                   *float64           `xml:"CreditLimit,omitempty" json:"CreditLimit,omitempty" yaml:"CreditLimit,omitempty"`
	UseSettlementGroupCreditLimit *bool              `xml:"UseSettlementGroupCreditLimit,omitempty" json:"UseSettlementGroupCreditLimit,omitempty" yaml:"UseSettlementGroupCreditLimit,omitempty"`
	CreditApproved                *bool              `xml:"CreditApproved,omitempty" json:"CreditApproved,omitempty" yaml:"CreditApproved,omitempty"`
	CreditOnHold                  *bool              `xml:"CreditOnHold,omitempty" json:"CreditOnHold,omitempty" yaml:"CreditOnHold,omitempty"`
	GSTIsApplicable               *bool              `xml:"GSTIsApplicable,omitempty" json:"GSTIsApplicable,omitempty" yaml:"GSTIsApplicable,omitempty"`
	WithholdingTaxIsApplicable    *bool              `xml:"WithholdingTaxIsApplicable,omitempty" json:"WithholdingTaxIsApplicable,omitempty" yaml:"WithholdingTaxIsApplicable,omitempty"`
	SettlementDetails             *SettlementDetails `xml:"SettlementDetails,omitempty" json:"SettlementDetails,omitempty" yaml:"SettlementDetails,omitempty"`
	AllowMultiCurrencyPayment     *bool              `xml:"AllowMultiCurrencyPayment,omitempty" json:"AllowMultiCurrencyPayment,omitempty" yaml:"AllowMultiCurrencyPayment,omitempty"`
	ExternalDebtorCode            *string            `xml:"ExternalDebtorCode,omitempty" json:"ExternalDebtorCode,omitempty" yaml:"ExternalDebtorCode,omitempty"`
	CompanyCode                   string             `xml:"CompanyCode,attr,omitempty" json:"CompanyCode,attr,omitempty" yaml:"CompanyCode,attr,omitempty"`
	TypeAttrXSI                   string             `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                 string             `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AccountsReceivable) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AccountsReceivable"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// AddressBase was auto-generated from WSDL.
type AddressBase struct {
	AddressLine1     *string                 `xml:"AddressLine1,omitempty" json:"AddressLine1,omitempty" yaml:"AddressLine1,omitempty"`
	AddressLine2     *string                 `xml:"AddressLine2,omitempty" json:"AddressLine2,omitempty" yaml:"AddressLine2,omitempty"`
	AddressCode      *string                 `xml:"AddressCode,omitempty" json:"AddressCode,omitempty" yaml:"AddressCode,omitempty"`
	CityOrSuburb     *string                 `xml:"CityOrSuburb,omitempty" json:"CityOrSuburb,omitempty" yaml:"CityOrSuburb,omitempty"`
	StateOrProvince  *string                 `xml:"StateOrProvince,omitempty" json:"StateOrProvince,omitempty" yaml:"StateOrProvince,omitempty"`
	PostCode         *string                 `xml:"PostCode,omitempty" json:"PostCode,omitempty" yaml:"PostCode,omitempty"`
	TelephoneNumbers *ArrayOfTelephoneNumber `xml:"TelephoneNumbers,omitempty" json:"TelephoneNumbers,omitempty" yaml:"TelephoneNumbers,omitempty"`
	Email            *string                 `xml:"Email,omitempty" json:"Email,omitempty" yaml:"Email,omitempty"`
	Language         *string                 `xml:"Language,omitempty" json:"Language,omitempty" yaml:"Language,omitempty"`
	TypeAttrXSI      string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddressBase) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddressBase"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// AddressCapability was auto-generated from WSDL.
type AddressCapability struct {
	IsMainAddress TrueFalse                    `xml:"IsMainAddress,attr,omitempty" json:"IsMainAddress,attr,omitempty" yaml:"IsMainAddress,attr,omitempty"`
	AddressType   AddressCapabilityAddressType `xml:"AddressType,attr,omitempty" json:"AddressType,attr,omitempty" yaml:"AddressType,attr,omitempty"`
	TypeAttrXSI   string                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddressCapability) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddressCapability"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// AddressReference was auto-generated from WSDL.
type AddressReference struct {
	AddressSequenceRef int           `xml:"AddressSequenceRef" json:"AddressSequenceRef" yaml:"AddressSequenceRef"`
	Organisation       *Organisation `xml:"Organisation,omitempty" json:"Organisation,omitempty" yaml:"Organisation,omitempty"`
	TypeAttrXSI        string        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *AddressReference) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:AddressReference"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// ArrayOfAccountsPayable was auto-generated from WSDL.
type ArrayOfAccountsPayable struct {
	AccountsPayable []*AccountsPayable `xml:"AccountsPayable,omitempty" json:"AccountsPayable,omitempty" yaml:"AccountsPayable,omitempty"`
}

// ArrayOfAccountsReceivable was auto-generated from WSDL.
type ArrayOfAccountsReceivable struct {
	AccountsReceivable []*AccountsReceivable `xml:"AccountsReceivable,omitempty" json:"AccountsReceivable,omitempty" yaml:"AccountsReceivable,omitempty"`
}

// ArrayOfBondDetail was auto-generated from WSDL.
type ArrayOfBondDetail struct {
	BondDetail []*BondDetail `xml:"BondDetail,omitempty" json:"BondDetail,omitempty" yaml:"BondDetail,omitempty"`
}

// ArrayOfDocumentLink was auto-generated from WSDL.
type ArrayOfDocumentLink struct {
	DocumentLink []*DocumentLink `xml:"DocumentLink,omitempty" json:"DocumentLink,omitempty" yaml:"DocumentLink,omitempty"`
}

// ArrayOfEDICodeMapping was auto-generated from WSDL.
type ArrayOfEDICodeMapping struct {
	EDICodeMapping []*EDICodeMapping `xml:"EDICodeMapping,omitempty" json:"EDICodeMapping,omitempty" yaml:"EDICodeMapping,omitempty"`
}

// ArrayOfInvoiceLink was auto-generated from WSDL.
type ArrayOfInvoiceLink struct {
	InvoiceLink []*InvoiceLink `xml:"InvoiceLink,omitempty" json:"InvoiceLink,omitempty" yaml:"InvoiceLink,omitempty"`
}

// ArrayOfNotesNote was auto-generated from WSDL.
type ArrayOfNotesNote struct {
	Note []*NotesNote `xml:"Note,omitempty" json:"Note,omitempty" yaml:"Note,omitempty"`
}

// ArrayOfOrgAddress was auto-generated from WSDL.
type ArrayOfOrgAddress struct {
	Address []*OrgAddress `xml:"Address,omitempty" json:"Address,omitempty" yaml:"Address,omitempty"`
}

// ArrayOfOrgContact was auto-generated from WSDL.
type ArrayOfOrgContact struct {
	Contact []*OrgContact `xml:"Contact,omitempty" json:"Contact,omitempty" yaml:"Contact,omitempty"`
}

// ArrayOfOrgWebURL was auto-generated from WSDL.
type ArrayOfOrgWebURL struct {
	URL []*OrgWebURL `xml:"URL,omitempty" json:"URL,omitempty" yaml:"URL,omitempty"`
}

// ArrayOfOrganisationDetailBrandName was auto-generated from WSDL.
type ArrayOfOrganisationDetailBrandName struct {
	BrandName []*OrganisationDetailBrandName `xml:"BrandName,omitempty" json:"BrandName,omitempty" yaml:"BrandName,omitempty"`
}

// ArrayOfOrganisationDetailOrganisationType was auto-generated
// from WSDL.
type ArrayOfOrganisationDetailOrganisationType struct {
	OrganisationType []*OrganisationDetailOrganisationType `xml:"OrganisationType,omitempty" json:"OrganisationType,omitempty" yaml:"OrganisationType,omitempty"`
}

// ArrayOfRegistrationNumber was auto-generated from WSDL.
type ArrayOfRegistrationNumber struct {
	RegistrationNumber []*RegistrationNumber `xml:"RegistrationNumber,omitempty" json:"RegistrationNumber,omitempty" yaml:"RegistrationNumber,omitempty"`
}

// ArrayOfTelephoneNumber was auto-generated from WSDL.
type ArrayOfTelephoneNumber struct {
	TelephoneNumber []*TelephoneNumber `xml:"TelephoneNumber,omitempty" json:"TelephoneNumber,omitempty" yaml:"TelephoneNumber,omitempty"`
}

// ArrayOfWebConsol was auto-generated from WSDL.
type ArrayOfWebConsol struct {
	Consol []*WebConsol `xml:"Consol,omitempty" json:"Consol,omitempty" yaml:"Consol,omitempty"`
}

// ArrayOfWebContainer was auto-generated from WSDL.
type ArrayOfWebContainer struct {
	Container []*WebContainer `xml:"Container,omitempty" json:"Container,omitempty" yaml:"Container,omitempty"`
}

// ArrayOfWebOrderSummary was auto-generated from WSDL.
type ArrayOfWebOrderSummary struct {
	Order []*WebOrderSummary `xml:"Order,omitempty" json:"Order,omitempty" yaml:"Order,omitempty"`
}

// ArrayOfWebPacking was auto-generated from WSDL.
type ArrayOfWebPacking struct {
	Packing []*WebPacking `xml:"Packing,omitempty" json:"Packing,omitempty" yaml:"Packing,omitempty"`
}

// AutoAccountsPayable was auto-generated from WSDL.
type AutoAccountsPayable interface{}

// AutoAccountsReceivable was auto-generated from WSDL.
type AutoAccountsReceivable interface{}

// AutoAddressBase was auto-generated from WSDL.
type AutoAddressBase interface{}

// AutoAddressCapability was auto-generated from WSDL.
type AutoAddressCapability interface{}

// AutoAddressReference was auto-generated from WSDL.
type AutoAddressReference interface{}

// AutoDimensionValue was auto-generated from WSDL.
type AutoDimensionValue interface{}

// AutoDocAddress was auto-generated from WSDL.
type AutoDocAddress interface{}

// AutoFinancialValue was auto-generated from WSDL.
type AutoFinancialValue interface{}

// AutoMonetaryAmount was auto-generated from WSDL.
type AutoMonetaryAmount interface{}

// AutoNotesNote was auto-generated from WSDL.
type AutoNotesNote interface{}

// AutoOrgAddress was auto-generated from WSDL.
type AutoOrgAddress interface{}

// AutoOrgContact was auto-generated from WSDL.
type AutoOrgContact interface{}

// AutoOrgWebURL was auto-generated from WSDL.
type AutoOrgWebURL interface{}

// AutoOrganisation was auto-generated from WSDL.
type AutoOrganisation interface{}

// AutoOrganisationDetail was auto-generated from WSDL.
type AutoOrganisationDetail interface{}

// AutoOrganisationDetailCountrySpecificDetails was auto-generated
// from WSDL.
type AutoOrganisationDetailCountrySpecificDetails interface{}

// AutoOrganisationDetailEDITransmissionDetails was auto-generated
// from WSDL.
type AutoOrganisationDetailEDITransmissionDetails interface{}

// AutoRegistrationNumber was auto-generated from WSDL.
type AutoRegistrationNumber interface{}

// AutoSettlementDetails was auto-generated from WSDL.
type AutoSettlementDetails interface{}

// AutoTelephoneNumber was auto-generated from WSDL.
type AutoTelephoneNumber interface{}

// AutoUNLOCO was auto-generated from WSDL.
type AutoUNLOCO interface{}

// AutoUSOrganisationSpecificDetails was auto-generated from WSDL.
type AutoUSOrganisationSpecificDetails interface{}

// AutoUSOrganisationSpecificDetailsEntryDocumentPrinting was auto-generated
// from WSDL.
type AutoUSOrganisationSpecificDetailsEntryDocumentPrinting interface{}

// AutoUSOrganisationSpecificDetailsFDA was auto-generated from
// WSDL.
type AutoUSOrganisationSpecificDetailsFDA interface{}

// AutoUSOrganisationSpecificDetailsImporterOfRecordDetails was
// auto-generated from WSDL.
type AutoUSOrganisationSpecificDetailsImporterOfRecordDetails interface{}

// AutoUSOrganisationSpecificDetailsImporterOfRecordDetailsNotifyParty
// was auto-generated from WSDL.
type AutoUSOrganisationSpecificDetailsImporterOfRecordDetailsNotifyParty interface{}

// AutoUSOrganisationSpecificDetailsMisc was auto-generated from
// WSDL.
type AutoUSOrganisationSpecificDetailsMisc interface{}

// AutoUSOrganisationSpecificDetailsReconciliation was auto-generated
// from WSDL.
type AutoUSOrganisationSpecificDetailsReconciliation interface{}

// AutoUSReconciliation was auto-generated from WSDL.
type AutoUSReconciliation interface{}

// AutoWebShipmentCustom was auto-generated from WSDL.
type AutoWebShipmentCustom interface{}

// AutoWebShipmentDeliver was auto-generated from WSDL.
type AutoWebShipmentDeliver interface{}

// BondDetail was auto-generated from WSDL.
type BondDetail struct {
	ActivityCode *BondDetailActivityCode `xml:"ActivityCode,omitempty" json:"ActivityCode,omitempty" yaml:"ActivityCode,omitempty"`
	Type         *string                 `xml:"Type,omitempty" json:"Type,omitempty" yaml:"Type,omitempty"`
	Number       *string                 `xml:"Number,omitempty" json:"Number,omitempty" yaml:"Number,omitempty"`
	SuretyCode   *string                 `xml:"SuretyCode,omitempty" json:"SuretyCode,omitempty" yaml:"SuretyCode,omitempty"`
	Amount       *float64                `xml:"Amount,omitempty" json:"Amount,omitempty" yaml:"Amount,omitempty"`
	Effective    *Date                   `xml:"Effective,omitempty" json:"Effective,omitempty" yaml:"Effective,omitempty"`
	Expiry       *Date                   `xml:"Expiry,omitempty" json:"Expiry,omitempty" yaml:"Expiry,omitempty"`
	FiledPort    *string                 `xml:"FiledPort,omitempty" json:"FiledPort,omitempty" yaml:"FiledPort,omitempty"`
}

// DimensionValue was auto-generated from WSDL.
type DimensionValue struct {
	Content       *float64 `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	DimensionType string   `xml:"DimensionType,attr,omitempty" json:"DimensionType,attr,omitempty" yaml:"DimensionType,attr,omitempty"`
	Description   string   `xml:"Description,attr,omitempty" json:"Description,attr,omitempty" yaml:"Description,attr,omitempty"`
}

// DocAddress was auto-generated from WSDL.
type DocAddress struct {
	AddressLine1       *string                 `xml:"AddressLine1,omitempty" json:"AddressLine1,omitempty" yaml:"AddressLine1,omitempty"`
	AddressLine2       *string                 `xml:"AddressLine2,omitempty" json:"AddressLine2,omitempty" yaml:"AddressLine2,omitempty"`
	AddressCode        *string                 `xml:"AddressCode,omitempty" json:"AddressCode,omitempty" yaml:"AddressCode,omitempty"`
	CityOrSuburb       *string                 `xml:"CityOrSuburb,omitempty" json:"CityOrSuburb,omitempty" yaml:"CityOrSuburb,omitempty"`
	StateOrProvince    *string                 `xml:"StateOrProvince,omitempty" json:"StateOrProvince,omitempty" yaml:"StateOrProvince,omitempty"`
	PostCode           *string                 `xml:"PostCode,omitempty" json:"PostCode,omitempty" yaml:"PostCode,omitempty"`
	TelephoneNumbers   *ArrayOfTelephoneNumber `xml:"TelephoneNumbers,omitempty" json:"TelephoneNumbers,omitempty" yaml:"TelephoneNumbers,omitempty"`
	Email              *string                 `xml:"Email,omitempty" json:"Email,omitempty" yaml:"Email,omitempty"`
	Language           *string                 `xml:"Language,omitempty" json:"Language,omitempty" yaml:"Language,omitempty"`
	AddressType        DocAddressAddressType   `xml:"AddressType,attr,omitempty" json:"AddressType,attr,omitempty" yaml:"AddressType,attr,omitempty"`
	AddressReference   *AddressReference       `xml:"AddressReference,omitempty" json:"AddressReference,omitempty" yaml:"AddressReference,omitempty"`
	CompanyName        *string                 `xml:"CompanyName,omitempty" json:"CompanyName,omitempty" yaml:"CompanyName,omitempty"`
	CountryCode        *string                 `xml:"CountryCode,omitempty" json:"CountryCode,omitempty" yaml:"CountryCode,omitempty"`
	ContactName        *string                 `xml:"ContactName,omitempty" json:"ContactName,omitempty" yaml:"ContactName,omitempty"`
	IsResidential      *bool                   `xml:"IsResidential,omitempty" json:"IsResidential,omitempty" yaml:"IsResidential,omitempty"`
	RegistrationNumber *RegistrationNumber     `xml:"RegistrationNumber,omitempty" json:"RegistrationNumber,omitempty" yaml:"RegistrationNumber,omitempty"`
	TypeAttrXSI        string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *DocAddress) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:DocAddress"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// DocumentLink was auto-generated from WSDL.
type DocumentLink struct {
	Date        *DateTime `xml:"Date,omitempty" json:"Date,omitempty" yaml:"Date,omitempty"`
	Description *string   `xml:"Description,omitempty" json:"Description,omitempty" yaml:"Description,omitempty"`
	Link        *string   `xml:"Link,omitempty" json:"Link,omitempty" yaml:"Link,omitempty"`
}

// EDICodeMapping was auto-generated from WSDL.
type EDICodeMapping struct {
	Relationship *string `xml:"Relationship,omitempty" json:"Relationship,omitempty" yaml:"Relationship,omitempty"`
	EDICode      *string `xml:"EDICode,omitempty" json:"EDICode,omitempty" yaml:"EDICode,omitempty"`
	ForeignCode  *string `xml:"ForeignCode,omitempty" json:"ForeignCode,omitempty" yaml:"ForeignCode,omitempty"`
}

// FinancialValue was auto-generated from WSDL.
type FinancialValue struct {
	Content      *float64 `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	CurrencyCode string   `xml:"CurrencyCode,attr,omitempty" json:"CurrencyCode,attr,omitempty" yaml:"CurrencyCode,attr,omitempty"`
}

// GetShipmentsList was auto-generated from WSDL.
type GetShipmentsList struct {
	Filter *WebShipmentFilter `xml:"Filter,omitempty" json:"Filter,omitempty" yaml:"Filter,omitempty"`
}

// GetShipmentsListResponse was auto-generated from WSDL.
type GetShipmentsListResponse struct {
	GetShipmentsListResult *WebShipments `xml:"GetShipmentsListResult,omitempty" json:"GetShipmentsListResult,omitempty" yaml:"GetShipmentsListResult,omitempty"`
}

// Hello was auto-generated from WSDL.
type Hello struct {
}

// HelloResponse was auto-generated from WSDL.
type HelloResponse struct {
	HelloResult *string `xml:"HelloResult,omitempty" json:"HelloResult,omitempty" yaml:"HelloResult,omitempty"`
}

// InvoiceLink was auto-generated from WSDL.
type InvoiceLink struct {
	InvoiceNumber     *string   `xml:"InvoiceNumber,omitempty" json:"InvoiceNumber,omitempty" yaml:"InvoiceNumber,omitempty"`
	IssuerName        *string   `xml:"IssuerName,omitempty" json:"IssuerName,omitempty" yaml:"IssuerName,omitempty"`
	TransactionType   *string   `xml:"TransactionType,omitempty" json:"TransactionType,omitempty" yaml:"TransactionType,omitempty"`
	InvoiceTerm       *string   `xml:"InvoiceTerm,omitempty" json:"InvoiceTerm,omitempty" yaml:"InvoiceTerm,omitempty"`
	InvoiceDate       *DateTime `xml:"InvoiceDate,omitempty" json:"InvoiceDate,omitempty" yaml:"InvoiceDate,omitempty"`
	DueDate           *DateTime `xml:"DueDate,omitempty" json:"DueDate,omitempty" yaml:"DueDate,omitempty"`
	Currency          *string   `xml:"Currency,omitempty" json:"Currency,omitempty" yaml:"Currency,omitempty"`
	TotalAmount       float64   `xml:"TotalAmount" json:"TotalAmount" yaml:"TotalAmount"`
	OutstandingAmount float64   `xml:"OutstandingAmount" json:"OutstandingAmount" yaml:"OutstandingAmount"`
	FullyPaidDate     *DateTime `xml:"FullyPaidDate,omitempty" json:"FullyPaidDate,omitempty" yaml:"FullyPaidDate,omitempty"`
	Link              *string   `xml:"Link,omitempty" json:"Link,omitempty" yaml:"Link,omitempty"`
}

// MonetaryAmount was auto-generated from WSDL.
type MonetaryAmount struct {
	Content *float64 `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
}

// NotesNote was auto-generated from WSDL.
type NotesNote struct {
	NoteType            NotesNoteNoteType `xml:"NoteType" json:"NoteType" yaml:"NoteType"`
	CustomNoteTypeName  *string           `xml:"CustomNoteTypeName,omitempty" json:"CustomNoteTypeName,omitempty" yaml:"CustomNoteTypeName,omitempty"`
	NoteData            *string           `xml:"NoteData,omitempty" json:"NoteData,omitempty" yaml:"NoteData,omitempty"`
	NoteCreatedDateTime *DateTime         `xml:"NoteCreatedDateTime,omitempty" json:"NoteCreatedDateTime,omitempty" yaml:"NoteCreatedDateTime,omitempty"`
	TypeAttrXSI         string            `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string            `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *NotesNote) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:NotesNote"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// OrgAddress was auto-generated from WSDL.
type OrgAddress struct {
	AddressLine1        *string                 `xml:"AddressLine1,omitempty" json:"AddressLine1,omitempty" yaml:"AddressLine1,omitempty"`
	AddressLine2        *string                 `xml:"AddressLine2,omitempty" json:"AddressLine2,omitempty" yaml:"AddressLine2,omitempty"`
	AddressCode         *string                 `xml:"AddressCode,omitempty" json:"AddressCode,omitempty" yaml:"AddressCode,omitempty"`
	CityOrSuburb        *string                 `xml:"CityOrSuburb,omitempty" json:"CityOrSuburb,omitempty" yaml:"CityOrSuburb,omitempty"`
	StateOrProvince     *string                 `xml:"StateOrProvince,omitempty" json:"StateOrProvince,omitempty" yaml:"StateOrProvince,omitempty"`
	PostCode            *string                 `xml:"PostCode,omitempty" json:"PostCode,omitempty" yaml:"PostCode,omitempty"`
	TelephoneNumbers    *ArrayOfTelephoneNumber `xml:"TelephoneNumbers,omitempty" json:"TelephoneNumbers,omitempty" yaml:"TelephoneNumbers,omitempty"`
	Email               *string                 `xml:"Email,omitempty" json:"Email,omitempty" yaml:"Email,omitempty"`
	Language            *string                 `xml:"Language,omitempty" json:"Language,omitempty" yaml:"Language,omitempty"`
	AddressType         OrgAddressAddressType   `xml:"AddressType,attr,omitempty" json:"AddressType,attr,omitempty" yaml:"AddressType,attr,omitempty"`
	CompanyName         *string                 `xml:"CompanyName,omitempty" json:"CompanyName,omitempty" yaml:"CompanyName,omitempty"`
	Location            *UNLOCO                 `xml:"Location,omitempty" json:"Location,omitempty" yaml:"Location,omitempty"`
	Sequence            *int                    `xml:"Sequence,omitempty" json:"Sequence,omitempty" yaml:"Sequence,omitempty"`
	AddressCapabilities []*AddressCapability    `xml:"AddressCapabilities>AddressCapability,omitempty" json:"AddressCapabilities>AddressCapability,omitempty" yaml:"AddressCapabilities>AddressCapability,omitempty"`
	TypeAttrXSI         string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *OrgAddress) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:OrgAddress"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// OrgContact was auto-generated from WSDL.
type OrgContact struct {
	Name                *string   `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	Salutation          *string   `xml:"Salutation,omitempty" json:"Salutation,omitempty" yaml:"Salutation,omitempty"`
	Language            *string   `xml:"Language,omitempty" json:"Language,omitempty" yaml:"Language,omitempty"`
	NotifyMode          *string   `xml:"NotifyMode,omitempty" json:"NotifyMode,omitempty" yaml:"NotifyMode,omitempty"`
	JobTitle            *string   `xml:"JobTitle,omitempty" json:"JobTitle,omitempty" yaml:"JobTitle,omitempty"`
	Phone               *string   `xml:"Phone,omitempty" json:"Phone,omitempty" yaml:"Phone,omitempty"`
	PhoneExtension      *string   `xml:"PhoneExtension,omitempty" json:"PhoneExtension,omitempty" yaml:"PhoneExtension,omitempty"`
	Fax                 *string   `xml:"Fax,omitempty" json:"Fax,omitempty" yaml:"Fax,omitempty"`
	Mobile              *string   `xml:"Mobile,omitempty" json:"Mobile,omitempty" yaml:"Mobile,omitempty"`
	HomePhone           *string   `xml:"HomePhone,omitempty" json:"HomePhone,omitempty" yaml:"HomePhone,omitempty"`
	Pager               *string   `xml:"Pager,omitempty" json:"Pager,omitempty" yaml:"Pager,omitempty"`
	OtherPhone          *string   `xml:"OtherPhone,omitempty" json:"OtherPhone,omitempty" yaml:"OtherPhone,omitempty"`
	AttachmentType      *string   `xml:"AttachmentType,omitempty" json:"AttachmentType,omitempty" yaml:"AttachmentType,omitempty"`
	WebAccessEnable     *bool     `xml:"WebAccessEnable,omitempty" json:"WebAccessEnable,omitempty" yaml:"WebAccessEnable,omitempty"`
	WebContractSignDate *DateTime `xml:"WebContractSignDate,omitempty" json:"WebContractSignDate,omitempty" yaml:"WebContractSignDate,omitempty"`
	Birthday            *DateTime `xml:"Birthday,omitempty" json:"Birthday,omitempty" yaml:"Birthday,omitempty"`
	EmailAddress        *string   `xml:"EmailAddress,omitempty" json:"EmailAddress,omitempty" yaml:"EmailAddress,omitempty"`
	Sequence            *int      `xml:"Sequence,omitempty" json:"Sequence,omitempty" yaml:"Sequence,omitempty"`
	TypeAttrXSI         string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *OrgContact) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:OrgContact"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// OrgWebURL was auto-generated from WSDL.
type OrgWebURL struct {
	URL           *string       `xml:"URL,omitempty" json:"URL,omitempty" yaml:"URL,omitempty"`
	Type          OrgWebURLType `xml:"Type" json:"Type" yaml:"Type"`
	Description   *string       `xml:"Description,omitempty" json:"Description,omitempty" yaml:"Description,omitempty"`
	IsPrimary     bool          `xml:"IsPrimary" json:"IsPrimary" yaml:"IsPrimary"`
	Sequence      *int          `xml:"Sequence,omitempty" json:"Sequence,omitempty" yaml:"Sequence,omitempty"`
	TypeAttrXSI   string        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *OrgWebURL) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:OrgWebURL"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// Organisation was auto-generated from WSDL.
type Organisation struct {
	OrganisationDetails *OrganisationDetail `xml:"OrganisationDetails,omitempty" json:"OrganisationDetails,omitempty" yaml:"OrganisationDetails,omitempty"`
	Notes               *ArrayOfNotesNote   `xml:"Notes,omitempty" json:"Notes,omitempty" yaml:"Notes,omitempty"`
	EDICode             string              `xml:"EDICode,attr,omitempty" json:"EDICode,attr,omitempty" yaml:"EDICode,attr,omitempty"`
	OwnerCode           string              `xml:"OwnerCode,attr,omitempty" json:"OwnerCode,attr,omitempty" yaml:"OwnerCode,attr,omitempty"`
	TypeAttrXSI         string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace       string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *Organisation) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:Organisation"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// OrganisationDetail was auto-generated from WSDL.
type OrganisationDetail struct {
	Name                   *string                                    `xml:"Name,omitempty" json:"Name,omitempty" yaml:"Name,omitempty"`
	Location               *UNLOCO                                    `xml:"Location,omitempty" json:"Location,omitempty" yaml:"Location,omitempty"`
	Addresses              *ArrayOfOrgAddress                         `xml:"Addresses,omitempty" json:"Addresses,omitempty" yaml:"Addresses,omitempty"`
	Contacts               *ArrayOfOrgContact                         `xml:"Contacts,omitempty" json:"Contacts,omitempty" yaml:"Contacts,omitempty"`
	OrgWebURLs             *ArrayOfOrgWebURL                          `xml:"OrgWebURLs,omitempty" json:"OrgWebURLs,omitempty" yaml:"OrgWebURLs,omitempty"`
	WebAddress             *string                                    `xml:"WebAddress,omitempty" json:"WebAddress,omitempty" yaml:"WebAddress,omitempty"`
	Language               *string                                    `xml:"Language,omitempty" json:"Language,omitempty" yaml:"Language,omitempty"`
	RegistrationNumbers    *ArrayOfRegistrationNumber                 `xml:"RegistrationNumbers,omitempty" json:"RegistrationNumbers,omitempty" yaml:"RegistrationNumbers,omitempty"`
	EDITransmissionDetails *OrganisationDetailEDITransmissionDetails  `xml:"EDITransmissionDetails,omitempty" json:"EDITransmissionDetails,omitempty" yaml:"EDITransmissionDetails,omitempty"`
	OrganisationTypes      *ArrayOfOrganisationDetailOrganisationType `xml:"OrganisationTypes,omitempty" json:"OrganisationTypes,omitempty" yaml:"OrganisationTypes,omitempty"`
	EDICodeMappings        *ArrayOfEDICodeMapping                     `xml:"EDICodeMappings,omitempty" json:"EDICodeMappings,omitempty" yaml:"EDICodeMappings,omitempty"`
	BrandNames             *ArrayOfOrganisationDetailBrandName        `xml:"BrandNames,omitempty" json:"BrandNames,omitempty" yaml:"BrandNames,omitempty"`
	AccountsReceivables    *ArrayOfAccountsReceivable                 `xml:"AccountsReceivables,omitempty" json:"AccountsReceivables,omitempty" yaml:"AccountsReceivables,omitempty"`
	AccountsPayables       *ArrayOfAccountsPayable                    `xml:"AccountsPayables,omitempty" json:"AccountsPayables,omitempty" yaml:"AccountsPayables,omitempty"`
	BondDetails            *ArrayOfBondDetail                         `xml:"BondDetails,omitempty" json:"BondDetails,omitempty" yaml:"BondDetails,omitempty"`
	IsActiveClient         *bool                                      `xml:"IsActiveClient,omitempty" json:"IsActiveClient,omitempty" yaml:"IsActiveClient,omitempty"`
	CountrySpecificDetails *OrganisationDetailCountrySpecificDetails  `xml:"CountrySpecificDetails,omitempty" json:"CountrySpecificDetails,omitempty" yaml:"CountrySpecificDetails,omitempty"`
	EDICode                string                                     `xml:"EDICode,attr,omitempty" json:"EDICode,attr,omitempty" yaml:"EDICode,attr,omitempty"`
	OwnerCode              string                                     `xml:"OwnerCode,attr,omitempty" json:"OwnerCode,attr,omitempty" yaml:"OwnerCode,attr,omitempty"`
	TypeAttrXSI            string                                     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace          string                                     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *OrganisationDetail) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:OrganisationDetail"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// OrganisationDetailBrandName was auto-generated from WSDL.
type OrganisationDetailBrandName struct {
	Content *string `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
}

// OrganisationDetailCountrySpecificDetails was auto-generated
// from WSDL.
type OrganisationDetailCountrySpecificDetails struct {
	USOrganisationSpecificDetails *USOrganisationSpecificDetails `xml:"USOrganisationSpecificDetails,omitempty" json:"USOrganisationSpecificDetails,omitempty" yaml:"USOrganisationSpecificDetails,omitempty"`
	TypeAttrXSI                   string                         `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                 string                         `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *OrganisationDetailCountrySpecificDetails) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:OrganisationDetailCountrySpecificDetails"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// OrganisationDetailEDITransmissionDetails was auto-generated
// from WSDL.
type OrganisationDetailEDITransmissionDetails struct {
	Type          OrganisationDetailEDITransmissionDetailsType `xml:"Type" json:"Type" yaml:"Type"`
	Address       *string                                      `xml:"Address,omitempty" json:"Address,omitempty" yaml:"Address,omitempty"`
	TypeAttrXSI   string                                       `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                                       `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *OrganisationDetailEDITransmissionDetails) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:OrganisationDetailEDITransmissionDetails"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// OrganisationDetailOrganisationType was auto-generated from WSDL.
type OrganisationDetailOrganisationType struct {
	Content *OrganisationTypes `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	Status  bool               `xml:"Status,attr,omitempty" json:"Status,attr,omitempty" yaml:"Status,attr,omitempty"`
}

// RegistrationNumber was auto-generated from WSDL.
type RegistrationNumber struct {
	CountryOfRegistration *string                 `xml:"CountryOfRegistration,omitempty" json:"CountryOfRegistration,omitempty" yaml:"CountryOfRegistration,omitempty"`
	NumberType            RegistrationNumberTypes `xml:"NumberType" json:"NumberType" yaml:"NumberType"`
	Number                *string                 `xml:"Number,omitempty" json:"Number,omitempty" yaml:"Number,omitempty"`
	AddressCode           *string                 `xml:"AddressCode,omitempty" json:"AddressCode,omitempty" yaml:"AddressCode,omitempty"`
	TypeAttrXSI           string                  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace         string                  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *RegistrationNumber) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:RegistrationNumber"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// SettlementDetails was auto-generated from WSDL.
type SettlementDetails struct {
	StandardInvoiceTerms     *string             `xml:"StandardInvoiceTerms,omitempty" json:"StandardInvoiceTerms,omitempty" yaml:"StandardInvoiceTerms,omitempty"`
	StandardInvoiceDays      *int                `xml:"StandardInvoiceDays,omitempty" json:"StandardInvoiceDays,omitempty" yaml:"StandardInvoiceDays,omitempty"`
	DisbursementInvoiceTerms *string             `xml:"DisbursementInvoiceTerms,omitempty" json:"DisbursementInvoiceTerms,omitempty" yaml:"DisbursementInvoiceTerms,omitempty"`
	DisbursementInvoiceDays  *int                `xml:"DisbursementInvoiceDays,omitempty" json:"DisbursementInvoiceDays,omitempty" yaml:"DisbursementInvoiceDays,omitempty"`
	SettlementGroup          *OrganisationDetail `xml:"SettlementGroup,omitempty" json:"SettlementGroup,omitempty" yaml:"SettlementGroup,omitempty"`
	TypeAttrXSI              string              `xml:"xsi:type,attr,omitempty"`
	TypeNamespace            string              `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *SettlementDetails) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:SettlementDetails"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// TelephoneNumber was auto-generated from WSDL.
type TelephoneNumber struct {
	Content    *string                   `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	NumberType TelephoneNumberNumberType `xml:"NumberType,attr,omitempty" json:"NumberType,attr,omitempty" yaml:"NumberType,attr,omitempty"`
}

// UNLOCO was auto-generated from WSDL.
type UNLOCO struct {
	Content *string `xml:"Content,omitempty" json:"Content,omitempty" yaml:"Content,omitempty"`
	Country string  `xml:"Country,attr,omitempty" json:"Country,attr,omitempty" yaml:"Country,attr,omitempty"`
	City    string  `xml:"City,attr,omitempty" json:"City,attr,omitempty" yaml:"City,attr,omitempty"`
}

// USImporterOfRecordDetails was auto-generated from WSDL.
type USImporterOfRecordDetails struct {
	PaymentType    *USImporterOfRecordDetailsPaymentType    `xml:"PaymentType,omitempty" json:"PaymentType,omitempty" yaml:"PaymentType,omitempty"`
	TaxDeferredInd *USImporterOfRecordDetailsTaxDeferredInd `xml:"TaxDeferredInd,omitempty" json:"TaxDeferredInd,omitempty" yaml:"TaxDeferredInd,omitempty"`
	Purchased      *TrueFalse                               `xml:"Purchased,omitempty" json:"Purchased,omitempty" yaml:"Purchased,omitempty"`
}

// USManufacturerProducerDataType was auto-generated from WSDL.
type USManufacturerProducerDataType struct {
	ProducerFirmType                  *USManufacturerProducerDataTypeProducerFirmType                  `xml:"ProducerFirmType,omitempty" json:"ProducerFirmType,omitempty" yaml:"ProducerFirmType,omitempty"`
	FoodFacilityRegistrationExemption *USManufacturerProducerDataTypeFoodFacilityRegistrationExemption `xml:"FoodFacilityRegistrationExemption,omitempty" json:"FoodFacilityRegistrationExemption,omitempty" yaml:"FoodFacilityRegistrationExemption,omitempty"`
}

// USOrganisationSpecificDetails was auto-generated from WSDL.
type USOrganisationSpecificDetails struct {
	FDA                     *USOrganisationSpecificDetailsFDA                     `xml:"FDA,omitempty" json:"FDA,omitempty" yaml:"FDA,omitempty"`
	Reconciliation          *USOrganisationSpecificDetailsReconciliation          `xml:"Reconciliation,omitempty" json:"Reconciliation,omitempty" yaml:"Reconciliation,omitempty"`
	ImporterOfRecordDetails *USOrganisationSpecificDetailsImporterOfRecordDetails `xml:"ImporterOfRecordDetails,omitempty" json:"ImporterOfRecordDetails,omitempty" yaml:"ImporterOfRecordDetails,omitempty"`
	EntryDocumentPrinting   *USOrganisationSpecificDetailsEntryDocumentPrinting   `xml:"EntryDocumentPrinting,omitempty" json:"EntryDocumentPrinting,omitempty" yaml:"EntryDocumentPrinting,omitempty"`
	Misc                    *USOrganisationSpecificDetailsMisc                    `xml:"Misc,omitempty" json:"Misc,omitempty" yaml:"Misc,omitempty"`
	TypeAttrXSI             string                                                `xml:"xsi:type,attr,omitempty"`
	TypeNamespace           string                                                `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *USOrganisationSpecificDetails) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:USOrganisationSpecificDetails"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// USOrganisationSpecificDetailsEntryDocumentPrinting was auto-generated
// from WSDL.
type USOrganisationSpecificDetailsEntryDocumentPrinting struct {
	ProductCode      *TrueFalse `xml:"ProductCode,omitempty" json:"ProductCode,omitempty" yaml:"ProductCode,omitempty"`
	CustomAttribute1 *TrueFalse `xml:"CustomAttribute1,omitempty" json:"CustomAttribute1,omitempty" yaml:"CustomAttribute1,omitempty"`
	CustomAttribute2 *TrueFalse `xml:"CustomAttribute2,omitempty" json:"CustomAttribute2,omitempty" yaml:"CustomAttribute2,omitempty"`
	CustomAttribute3 *TrueFalse `xml:"CustomAttribute3,omitempty" json:"CustomAttribute3,omitempty" yaml:"CustomAttribute3,omitempty"`
	TypeAttrXSI      string     `xml:"xsi:type,attr,omitempty"`
	TypeNamespace    string     `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *USOrganisationSpecificDetailsEntryDocumentPrinting) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:USOrganisationSpecificDetailsEntryDocumentPrinting"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// USOrganisationSpecificDetailsFDA was auto-generated from WSDL.
type USOrganisationSpecificDetailsFDA struct {
	ProducerFirmType                  *USManufacturerProducerDataTypeProducerFirmType                  `xml:"ProducerFirmType,omitempty" json:"ProducerFirmType,omitempty" yaml:"ProducerFirmType,omitempty"`
	FoodFacilityRegistrationExemption *USManufacturerProducerDataTypeFoodFacilityRegistrationExemption `xml:"FoodFacilityRegistrationExemption,omitempty" json:"FoodFacilityRegistrationExemption,omitempty" yaml:"FoodFacilityRegistrationExemption,omitempty"`
	SubmitterFirmType                 *USOrganisationSpecificDetailsFDASubmitterFirmType               `xml:"SubmitterFirmType,omitempty" json:"SubmitterFirmType,omitempty" yaml:"SubmitterFirmType,omitempty"`
	FirstName                         *string                                                          `xml:"FirstName,omitempty" json:"FirstName,omitempty" yaml:"FirstName,omitempty"`
	LastName                          *string                                                          `xml:"LastName,omitempty" json:"LastName,omitempty" yaml:"LastName,omitempty"`
	PhoneNo                           *string                                                          `xml:"PhoneNo,omitempty" json:"PhoneNo,omitempty" yaml:"PhoneNo,omitempty"`
	FaxNo                             *string                                                          `xml:"FaxNo,omitempty" json:"FaxNo,omitempty" yaml:"FaxNo,omitempty"`
	Email                             *string                                                          `xml:"Email,omitempty" json:"Email,omitempty" yaml:"Email,omitempty"`
	TypeAttrXSI                       string                                                           `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                     string                                                           `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *USOrganisationSpecificDetailsFDA) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:USOrganisationSpecificDetailsFDA"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// USOrganisationSpecificDetailsImporterOfRecordDetails was auto-generated
// from WSDL.
type USOrganisationSpecificDetailsImporterOfRecordDetails struct {
	PaymentType                          *USImporterOfRecordDetailsPaymentType                            `xml:"PaymentType,omitempty" json:"PaymentType,omitempty" yaml:"PaymentType,omitempty"`
	TaxDeferredInd                       *USImporterOfRecordDetailsTaxDeferredInd                         `xml:"TaxDeferredInd,omitempty" json:"TaxDeferredInd,omitempty" yaml:"TaxDeferredInd,omitempty"`
	Purchased                            *TrueFalse                                                       `xml:"Purchased,omitempty" json:"Purchased,omitempty" yaml:"Purchased,omitempty"`
	PayersUnitNo                         *string                                                          `xml:"PayersUnitNo,omitempty" json:"PayersUnitNo,omitempty" yaml:"PayersUnitNo,omitempty"`
	StatementPrintDateWorkingDays        *int                                                             `xml:"StatementPrintDateWorkingDays,omitempty" json:"StatementPrintDateWorkingDays,omitempty" yaml:"StatementPrintDateWorkingDays,omitempty"`
	DoNotAutoGenerateStmDayChangeRequest *TrueFalse                                                       `xml:"DoNotAutoGenerateStmDayChangeRequest,omitempty" json:"DoNotAutoGenerateStmDayChangeRequest,omitempty" yaml:"DoNotAutoGenerateStmDayChangeRequest,omitempty"`
	NotifyParty                          *USOrganisationSpecificDetailsImporterOfRecordDetailsNotifyParty `xml:"NotifyParty,omitempty" json:"NotifyParty,omitempty" yaml:"NotifyParty,omitempty"`
	TypeAttrXSI                          string                                                           `xml:"xsi:type,attr,omitempty"`
	TypeNamespace                        string                                                           `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *USOrganisationSpecificDetailsImporterOfRecordDetails) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:USOrganisationSpecificDetailsImporterOfRecordDetails"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// USOrganisationSpecificDetailsImporterOfRecordDetailsNotifyParty
// was auto-generated from WSDL.
type USOrganisationSpecificDetailsImporterOfRecordDetailsNotifyParty struct {
	NotifyParty   *Organisation `xml:"NotifyParty,omitempty" json:"NotifyParty,omitempty" yaml:"NotifyParty,omitempty"`
	PartyIDNumber *string       `xml:"PartyIDNumber,omitempty" json:"PartyIDNumber,omitempty" yaml:"PartyIDNumber,omitempty"`
	TypeAttrXSI   string        `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string        `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *USOrganisationSpecificDetailsImporterOfRecordDetailsNotifyParty) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:USOrganisationSpecificDetailsImporterOfRecordDetailsNotifyParty"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// USOrganisationSpecificDetailsMisc was auto-generated from WSDL.
type USOrganisationSpecificDetailsMisc struct {
	BIRDDefaultBranch *string `xml:"BIRDDefaultBranch,omitempty" json:"BIRDDefaultBranch,omitempty" yaml:"BIRDDefaultBranch,omitempty"`
	TypeAttrXSI       string  `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string  `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *USOrganisationSpecificDetailsMisc) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:USOrganisationSpecificDetailsMisc"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// USOrganisationSpecificDetailsReconciliation was auto-generated
// from WSDL.
type USOrganisationSpecificDetailsReconciliation struct {
	Issue             *USReconciliationIssue `xml:"Issue,omitempty" json:"Issue,omitempty" yaml:"Issue,omitempty"`
	NAFTA             *TrueFalse             `xml:"NAFTA,omitempty" json:"NAFTA,omitempty" yaml:"NAFTA,omitempty"`
	FileTheirOwnRecon *TrueFalse             `xml:"FileTheirOwnRecon,omitempty" json:"FileTheirOwnRecon,omitempty" yaml:"FileTheirOwnRecon,omitempty"`
	TypeAttrXSI       string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace     string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *USOrganisationSpecificDetailsReconciliation) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:USOrganisationSpecificDetailsReconciliation"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// USReconciliation was auto-generated from WSDL.
type USReconciliation struct {
	Issue         *USReconciliationIssue `xml:"Issue,omitempty" json:"Issue,omitempty" yaml:"Issue,omitempty"`
	NAFTA         *TrueFalse             `xml:"NAFTA,omitempty" json:"NAFTA,omitempty" yaml:"NAFTA,omitempty"`
	TypeAttrXSI   string                 `xml:"xsi:type,attr,omitempty"`
	TypeNamespace string                 `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *USReconciliation) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:USReconciliation"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// WebConsol was auto-generated from WSDL.
type WebConsol struct {
	MasterBill    *string   `xml:"MasterBill,omitempty" json:"MasterBill,omitempty" yaml:"MasterBill,omitempty"`
	ConsolMode    *string   `xml:"ConsolMode,omitempty" json:"ConsolMode,omitempty" yaml:"ConsolMode,omitempty"`
	TransportMode *string   `xml:"TransportMode,omitempty" json:"TransportMode,omitempty" yaml:"TransportMode,omitempty"`
	VesselName    *string   `xml:"VesselName,omitempty" json:"VesselName,omitempty" yaml:"VesselName,omitempty"`
	VoyageFlight  *string   `xml:"VoyageFlight,omitempty" json:"VoyageFlight,omitempty" yaml:"VoyageFlight,omitempty"`
	LoadPort      *UNLOCO   `xml:"LoadPort,omitempty" json:"LoadPort,omitempty" yaml:"LoadPort,omitempty"`
	DischargePort *UNLOCO   `xml:"DischargePort,omitempty" json:"DischargePort,omitempty" yaml:"DischargePort,omitempty"`
	ATD           *DateTime `xml:"ATD,omitempty" json:"ATD,omitempty" yaml:"ATD,omitempty"`
	ATA           *DateTime `xml:"ATA,omitempty" json:"ATA,omitempty" yaml:"ATA,omitempty"`
}

// WebContainer was auto-generated from WSDL.
type WebContainer struct {
	ContainerNumber    *string         `xml:"ContainerNumber,omitempty" json:"ContainerNumber,omitempty" yaml:"ContainerNumber,omitempty"`
	NumberOfContainers *uint64         `xml:"NumberOfContainers,omitempty" json:"NumberOfContainers,omitempty" yaml:"NumberOfContainers,omitempty"`
	SealNumber         *string         `xml:"SealNumber,omitempty" json:"SealNumber,omitempty" yaml:"SealNumber,omitempty"`
	Mode               *TransportMode  `xml:"Mode,omitempty" json:"Mode,omitempty" yaml:"Mode,omitempty"`
	Weight             *DimensionValue `xml:"Weight,omitempty" json:"Weight,omitempty" yaml:"Weight,omitempty"`
	DeliveryMode       *string         `xml:"DeliveryMode,omitempty" json:"DeliveryMode,omitempty" yaml:"DeliveryMode,omitempty"`
}

// WebOrderSummary was auto-generated from WSDL.
type WebOrderSummary struct {
	OrderNumber *string         `xml:"OrderNumber,omitempty" json:"OrderNumber,omitempty" yaml:"OrderNumber,omitempty"`
	Status      *string         `xml:"Status,omitempty" json:"Status,omitempty" yaml:"Status,omitempty"`
	Packs       *DimensionValue `xml:"Packs,omitempty" json:"Packs,omitempty" yaml:"Packs,omitempty"`
	QuoteNumber *string         `xml:"QuoteNumber,omitempty" json:"QuoteNumber,omitempty" yaml:"QuoteNumber,omitempty"`
	OrderDate   *Date           `xml:"OrderDate,omitempty" json:"OrderDate,omitempty" yaml:"OrderDate,omitempty"`
}

// WebPacking was auto-generated from WSDL.
type WebPacking struct {
	PackType        *string         `xml:"PackType,omitempty" json:"PackType,omitempty" yaml:"PackType,omitempty"`
	LinePrice       *FinancialValue `xml:"LinePrice,omitempty" json:"LinePrice,omitempty" yaml:"LinePrice,omitempty"`
	Weight          *DimensionValue `xml:"Weight,omitempty" json:"Weight,omitempty" yaml:"Weight,omitempty"`
	Volume          *DimensionValue `xml:"Volume,omitempty" json:"Volume,omitempty" yaml:"Volume,omitempty"`
	Description     *string         `xml:"Description,omitempty" json:"Description,omitempty" yaml:"Description,omitempty"`
	ContainerNumber *string         `xml:"ContainerNumber,omitempty" json:"ContainerNumber,omitempty" yaml:"ContainerNumber,omitempty"`
}

// WebShipment was auto-generated from WSDL.
type WebShipment struct {
	Number              *string                 `xml:"Number,omitempty" json:"Number,omitempty" yaml:"Number,omitempty"`
	HouseBill           *string                 `xml:"HouseBill,omitempty" json:"HouseBill,omitempty" yaml:"HouseBill,omitempty"`
	Shipper             *Organisation           `xml:"Shipper,omitempty" json:"Shipper,omitempty" yaml:"Shipper,omitempty"`
	Consignee           *Organisation           `xml:"Consignee,omitempty" json:"Consignee,omitempty" yaml:"Consignee,omitempty"`
	ClientReference     *string                 `xml:"ClientReference,omitempty" json:"ClientReference,omitempty" yaml:"ClientReference,omitempty"`
	GoodsDescription    *string                 `xml:"GoodsDescription,omitempty" json:"GoodsDescription,omitempty" yaml:"GoodsDescription,omitempty"`
	ServiceLevel        *string                 `xml:"ServiceLevel,omitempty" json:"ServiceLevel,omitempty" yaml:"ServiceLevel,omitempty"`
	Origin              *UNLOCO                 `xml:"Origin,omitempty" json:"Origin,omitempty" yaml:"Origin,omitempty"`
	Destination         *UNLOCO                 `xml:"Destination,omitempty" json:"Destination,omitempty" yaml:"Destination,omitempty"`
	ETD                 *DateTime               `xml:"ETD,omitempty" json:"ETD,omitempty" yaml:"ETD,omitempty"`
	ETA                 *DateTime               `xml:"ETA,omitempty" json:"ETA,omitempty" yaml:"ETA,omitempty"`
	DeliveredDate       *DateTime               `xml:"DeliveredDate,omitempty" json:"DeliveredDate,omitempty" yaml:"DeliveredDate,omitempty"`
	Size                *DimensionValue         `xml:"Size,omitempty" json:"Size,omitempty" yaml:"Size,omitempty"`
	Weight              *DimensionValue         `xml:"Weight,omitempty" json:"Weight,omitempty" yaml:"Weight,omitempty"`
	Quantity            *DimensionValue         `xml:"Quantity,omitempty" json:"Quantity,omitempty" yaml:"Quantity,omitempty"`
	Consols             *ArrayOfWebConsol       `xml:"Consols,omitempty" json:"Consols,omitempty" yaml:"Consols,omitempty"`
	Packings            *ArrayOfWebPacking      `xml:"Packings,omitempty" json:"Packings,omitempty" yaml:"Packings,omitempty"`
	Orders              *ArrayOfWebOrderSummary `xml:"Orders,omitempty" json:"Orders,omitempty" yaml:"Orders,omitempty"`
	Containers          *ArrayOfWebContainer    `xml:"Containers,omitempty" json:"Containers,omitempty" yaml:"Containers,omitempty"`
	Notes               *ArrayOfNotesNote       `xml:"Notes,omitempty" json:"Notes,omitempty" yaml:"Notes,omitempty"`
	Custom              *WebShipmentCustom      `xml:"Custom,omitempty" json:"Custom,omitempty" yaml:"Custom,omitempty"`
	Deliver             *WebShipmentDeliver     `xml:"Deliver,omitempty" json:"Deliver,omitempty" yaml:"Deliver,omitempty"`
	DocumentLinks       *ArrayOfDocumentLink    `xml:"DocumentLinks,omitempty" json:"DocumentLinks,omitempty" yaml:"DocumentLinks,omitempty"`
	RelatedInvoiceLinks *ArrayOfInvoiceLink     `xml:"RelatedInvoiceLinks,omitempty" json:"RelatedInvoiceLinks,omitempty" yaml:"RelatedInvoiceLinks,omitempty"`
}

// WebShipmentCustom was auto-generated from WSDL.
type WebShipmentCustom struct {
	CustomAttrib1  *string   `xml:"CustomAttrib1,omitempty" json:"CustomAttrib1,omitempty" yaml:"CustomAttrib1,omitempty"`
	CustomAttrib2  *string   `xml:"CustomAttrib2,omitempty" json:"CustomAttrib2,omitempty" yaml:"CustomAttrib2,omitempty"`
	CustomDate1    *DateTime `xml:"CustomDate1,omitempty" json:"CustomDate1,omitempty" yaml:"CustomDate1,omitempty"`
	CustomDate2    *DateTime `xml:"CustomDate2,omitempty" json:"CustomDate2,omitempty" yaml:"CustomDate2,omitempty"`
	CustomDecimal1 *float64  `xml:"CustomDecimal1,omitempty" json:"CustomDecimal1,omitempty" yaml:"CustomDecimal1,omitempty"`
	CustomDecimal2 *float64  `xml:"CustomDecimal2,omitempty" json:"CustomDecimal2,omitempty" yaml:"CustomDecimal2,omitempty"`
	CustomFlag1    *bool     `xml:"CustomFlag1,omitempty" json:"CustomFlag1,omitempty" yaml:"CustomFlag1,omitempty"`
	CustomFlag2    *bool     `xml:"CustomFlag2,omitempty" json:"CustomFlag2,omitempty" yaml:"CustomFlag2,omitempty"`
	TypeAttrXSI    string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace  string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *WebShipmentCustom) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:WebShipmentCustom"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// WebShipmentDeliver was auto-generated from WSDL.
type WebShipmentDeliver struct {
	Available          *DateTime `xml:"Available,omitempty" json:"Available,omitempty" yaml:"Available,omitempty"`
	StorageCommences   *DateTime `xml:"StorageCommences,omitempty" json:"StorageCommences,omitempty" yaml:"StorageCommences,omitempty"`
	DeliveryFrom       *DateTime `xml:"DeliveryFrom,omitempty" json:"DeliveryFrom,omitempty" yaml:"DeliveryFrom,omitempty"`
	DeliveryRequiredBy *DateTime `xml:"DeliveryRequiredBy,omitempty" json:"DeliveryRequiredBy,omitempty" yaml:"DeliveryRequiredBy,omitempty"`
	CartageAdvised     *DateTime `xml:"CartageAdvised,omitempty" json:"CartageAdvised,omitempty" yaml:"CartageAdvised,omitempty"`
	TypeAttrXSI        string    `xml:"xsi:type,attr,omitempty"`
	TypeNamespace      string    `xml:"xmlns:objtype,attr,omitempty"`

	OverrideTypeAttrXSI   *string `xml:"-"`
	OverrideTypeNamespace *string `xml:"-"`
}

// SetXMLType was auto-generated from WSDL.
func (t *WebShipmentDeliver) SetXMLType() {
	if t.OverrideTypeAttrXSI != nil {
		t.TypeAttrXSI = *t.OverrideTypeAttrXSI
	} else {
		t.TypeAttrXSI = "objtype:WebShipmentDeliver"
	}
	if t.OverrideTypeNamespace != nil {
		t.TypeNamespace = *t.OverrideTypeNamespace
	} else {
		t.TypeNamespace = "http://www.edi.com.au/EnterpriseService/"
	}
}

// WebShipmentFilter was auto-generated from WSDL.
type WebShipmentFilter struct {
	Number       *WebShipmentFilterNumber       `xml:"Number,omitempty" json:"Number,omitempty" yaml:"Number,omitempty"`
	Status       *ShipmentStatusList            `xml:"Status,omitempty" json:"Status,omitempty" yaml:"Status,omitempty"`
	Date         *WebShipmentFilterDate         `xml:"Date,omitempty" json:"Date,omitempty" yaml:"Date,omitempty"`
	Organisation *WebShipmentFilterOrganisation `xml:"Organisation,omitempty" json:"Organisation,omitempty" yaml:"Organisation,omitempty"`
	Location     *WebShipmentFilterLocation     `xml:"Location,omitempty" json:"Location,omitempty" yaml:"Location,omitempty"`
	VoyageFlight *string                        `xml:"VoyageFlight,omitempty" json:"VoyageFlight,omitempty" yaml:"VoyageFlight,omitempty"`
	Vessel       *string                        `xml:"Vessel,omitempty" json:"Vessel,omitempty" yaml:"Vessel,omitempty"`
	Version      string                         `xml:"Version,attr,omitempty" json:"Version,attr,omitempty" yaml:"Version,attr,omitempty"`
}

// WebShipmentFilterDate was auto-generated from WSDL.
type WebShipmentFilterDate struct {
	DateSearchField ShipmentDateFieldsList `xml:"DateSearchField" json:"DateSearchField" yaml:"DateSearchField"`
	FromDate        *Date                  `xml:"FromDate,omitempty" json:"FromDate,omitempty" yaml:"FromDate,omitempty"`
	ToDate          *Date                  `xml:"ToDate,omitempty" json:"ToDate,omitempty" yaml:"ToDate,omitempty"`
}

// WebShipmentFilterLocation was auto-generated from WSDL.
type WebShipmentFilterLocation struct {
	LocationSearchField ShipmentLocationFieldsList `xml:"LocationSearchField" json:"LocationSearchField" yaml:"LocationSearchField"`
	Location1           *UNLOCO                    `xml:"Location1,omitempty" json:"Location1,omitempty" yaml:"Location1,omitempty"`
	Location2           *UNLOCO                    `xml:"Location2,omitempty" json:"Location2,omitempty" yaml:"Location2,omitempty"`
}

// WebShipmentFilterNumber was auto-generated from WSDL.
type WebShipmentFilterNumber struct {
	NumberSearchField ShipmentNumberFieldsList `xml:"NumberSearchField" json:"NumberSearchField" yaml:"NumberSearchField"`
	NumberValue       *string                  `xml:"NumberValue,omitempty" json:"NumberValue,omitempty" yaml:"NumberValue,omitempty"`
}

// WebShipmentFilterOrganisation was auto-generated from WSDL.
type WebShipmentFilterOrganisation struct {
	OrganisationSearchField ShipmentOrganisationFieldsList `xml:"OrganisationSearchField" json:"OrganisationSearchField" yaml:"OrganisationSearchField"`
	Organisation1           *string                        `xml:"Organisation1,omitempty" json:"Organisation1,omitempty" yaml:"Organisation1,omitempty"`
	Organisation2           *string                        `xml:"Organisation2,omitempty" json:"Organisation2,omitempty" yaml:"Organisation2,omitempty"`
}

// WebShipments was auto-generated from WSDL.
type WebShipments struct {
	WebShipment  []*WebShipment `xml:"WebShipment,omitempty" json:"WebShipment,omitempty" yaml:"WebShipment,omitempty"`
	TotalRows    uint64         `xml:"TotalRows,attr,omitempty" json:"TotalRows,attr,omitempty" yaml:"TotalRows,attr,omitempty"`
	ReturnedRows uint64         `xml:"ReturnedRows,attr,omitempty" json:"ReturnedRows,attr,omitempty" yaml:"ReturnedRows,attr,omitempty"`
	Version      string         `xml:"Version,attr,omitempty" json:"Version,attr,omitempty" yaml:"Version,attr,omitempty"`
}

// WebTrackerSOAPHeader was auto-generated from WSDL.
type WebTrackerSOAPHeader struct {
	CompanyCode *string `xml:"CompanyCode,omitempty" json:"CompanyCode,omitempty" yaml:"CompanyCode,omitempty"`
	UserName    *string `xml:"UserName,omitempty" json:"UserName,omitempty" yaml:"UserName,omitempty"`
	Password    *string `xml:"Password,omitempty" json:"Password,omitempty" yaml:"Password,omitempty"`
}

// Operation wrapper for GetShipmentsList.
// OperationGetShipmentsListSoapIn was auto-generated from WSDL.
type OperationGetShipmentsListSoapIn struct {
	GetShipmentsList *GetShipmentsList `xml:"GetShipmentsList,omitempty" json:"GetShipmentsList,omitempty" yaml:"GetShipmentsList,omitempty"`
}

// Operation wrapper for GetShipmentsList.
// OperationGetShipmentsListSoapOut was auto-generated from WSDL.
type OperationGetShipmentsListSoapOut struct {
	GetShipmentsListResponse *GetShipmentsListResponse `xml:"GetShipmentsListResponse,omitempty" json:"GetShipmentsListResponse,omitempty" yaml:"GetShipmentsListResponse,omitempty"`
}

// Operation wrapper for Hello.
// OperationHelloSoapIn was auto-generated from WSDL.
type OperationHelloSoapIn struct {
	Hello *Hello `xml:"Hello,omitempty" json:"Hello,omitempty" yaml:"Hello,omitempty"`
}

// Operation wrapper for Hello.
// OperationHelloSoapOut was auto-generated from WSDL.
type OperationHelloSoapOut struct {
	HelloResponse *HelloResponse `xml:"HelloResponse,omitempty" json:"HelloResponse,omitempty" yaml:"HelloResponse,omitempty"`
}

// shipmentServiceSoap implements the ShipmentServiceSoap interface.
type shipmentServiceSoap struct {
	cli *soap.Client
}

// Returns list of all Shipments/Declarations for a client. This
// method requires a custom soap header set by the caller
func (p *shipmentServiceSoap) GetShipmentsList(GetShipmentsList *GetShipmentsList) (*GetShipmentsListResponse, error) {
	α := struct {
		OperationGetShipmentsListSoapIn `xml:"tns:GetShipmentsList"`
	}{
		OperationGetShipmentsListSoapIn{
			GetShipmentsList,
		},
	}

	γ := struct {
		OperationGetShipmentsListSoapOut `xml:"GetShipmentsListResponse"`
	}{}
	if err := p.cli.RoundTripSoap12("http://www.edi.com.au/EnterpriseService/GetShipmentsList", α, &γ); err != nil {
		return nil, err
	}
	return γ.GetShipmentsListResponse, nil
}

// Test method to check whether login credentials work
func (p *shipmentServiceSoap) Hello(Hello *Hello) (*HelloResponse, error) {
	α := struct {
		OperationHelloSoapIn `xml:"tns:Hello"`
	}{
		OperationHelloSoapIn{
			Hello,
		},
	}

	γ := struct {
		OperationHelloSoapOut `xml:"HelloResponse"`
	}{}
	if err := p.cli.RoundTripSoap12("http://www.edi.com.au/EnterpriseService/Hello", α, &γ); err != nil {
		return nil, err
	}
	return γ.HelloResponse, nil
}
